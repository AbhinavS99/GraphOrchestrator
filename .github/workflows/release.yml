name: Publish Python üêç package to PyPI

on:
  push:
    tags:
      - "v*.*.*"  # Trigger on semantic version tags like v1.2.3
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write  # Needed for creating GitHub Releases

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Ensure tag is from a release branch
        run: |
          BRANCHES=$(git branch -r --contains $GITHUB_SHA | grep 'origin/releases/' || true)
          echo "Branches containing this commit: $BRANCHES"
          if [[ -z "$BRANCHES" ]]; then
            echo "‚ùå This tag was not created from a release branch (releases/*)."
            exit 1
          fi

      - name: Build the package
        run: python -m build

      - name: Upload distribution as artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Official release
            - Source: `${{ github.repository }}`
            - Tag: `${{ github.ref_name }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
